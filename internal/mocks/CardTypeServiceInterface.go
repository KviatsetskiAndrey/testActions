// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import (
	model "github.com/Confialink/wallet-accounts/internal/modules/card-type/model"
	mock "github.com/stretchr/testify/mock"

	url "net/url"
)

// CardTypeServiceInterface is an autogenerated mock type for the CardTypeServiceInterface type
type CardTypeServiceInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *CardTypeServiceInterface) Create(_a0 *model.SerializedCardType) (*model.CardType, error) {
	ret := _m.Called(_a0)

	var r0 *model.CardType
	if rf, ok := ret.Get(0).(func(*model.SerializedCardType) *model.CardType); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.CardType)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*model.SerializedCardType) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0
func (_m *CardTypeServiceInterface) Get(_a0 uint32) (*model.CardType, error) {
	ret := _m.Called(_a0)

	var r0 *model.CardType
	if rf, ok := ret.Get(0).(func(uint32) *model.CardType); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.CardType)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint32) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetListWithCount provides a mock function with given fields: _a0
func (_m *CardTypeServiceInterface) GetListWithCount(_a0 url.Values) ([]*model.CardType, uint64, error) {
	ret := _m.Called(_a0)

	var r0 []*model.CardType
	if rf, ok := ret.Get(0).(func(url.Values) []*model.CardType); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*model.CardType)
		}
	}

	var r1 uint64
	if rf, ok := ret.Get(1).(func(url.Values) uint64); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Get(1).(uint64)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(url.Values) error); ok {
		r2 = rf(_a0)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// UpdateFields provides a mock function with given fields: _a0, _a1
func (_m *CardTypeServiceInterface) UpdateFields(_a0 uint32, _a1 map[string]interface{}) (*model.CardType, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *model.CardType
	if rf, ok := ret.Get(0).(func(uint32, map[string]interface{}) *model.CardType); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.CardType)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint32, map[string]interface{}) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
